(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{415:function(a,t,s){"use strict";s.r(t);var e=s(1),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"ただいま"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ただいま"}},[a._v("#")]),a._v(" ただいま")]),a._v(" "),s("p",[a._v("今日は起きたら出勤時刻1時間前で記事を書く時間がなかったので5連勤目10時間シフトの後の投稿となりました。\n疲れ果てて帰宅した後に部屋を薄暗くしてアロマ焚きながらVtuberの生放送をみるのが至高。")]),a._v(" "),s("p",[a._v("#NowListening "),s("a",{attrs:{href:"https://youtu.be/TXDdewgf3Eo",target:"_blank",rel:"noopener noreferrer"}},[a._v("バ美肉らじお　ばびらじ！　#1"),s("OutboundLink")],1)]),a._v(" "),s("h1",{attrs:{id:"それはさておきつづき"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#それはさておきつづき"}},[a._v("#")]),a._v(" それはさておきつづき")]),a._v(" "),s("h1",{attrs:{id:"_7-20-5日目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-20-5日目"}},[a._v("#")]),a._v(" 7/20(5日目)")]),a._v(" "),s("p",[a._v("型システムを少し拡張してタプルなどに対応しました。")]),a._v(" "),s("h3",{attrs:{id:"lambda-ac"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lambda-ac"}},[a._v("#")]),a._v(" lambda.ac")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("a: Int -> Int = { i: Int -> i ^ 2 } // lambda\nb: (Int, Int) = (1, 2) // tuple\n")])])]),s("p",[a._v("ちなみに内部では "),s("code",[a._v("Int -> Int")]),a._v(" は "),s("code",[a._v("[['Int'], 'Int']")]),a._v("、"),s("code",[a._v("(Int, Int)")]),a._v(" は "),s("code",[a._v("[['Int', 'Int']]")]),a._v(" という構造となっています。\nしかし、タプルは型を複雑にしすぎるという理由で後々導入をやめました。")]),a._v(" "),s("h1",{attrs:{id:"_7-24-7日目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-24-7日目"}},[a._v("#")]),a._v(" 7/24(7日目)")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("commit 10003dc8eafb73721da2852d9f6800d7ccaab604 '式の評価をするTraverserを書き始めた'\n")])])]),s("p",[a._v("パーサーと意味解析器を分離して、ASTを再帰的に辿るTraverserを書き始めました。例えば、")]),a._v(" "),s("h3",{attrs:{id:"sample-ac"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sample-ac"}},[a._v("#")]),a._v(" sample.ac")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("a: = 1 + 1\n")])])]),s("p",[a._v("は")]),a._v(" "),s("h3",{attrs:{id:"ast"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ast"}},[a._v("#")]),a._v(" AST")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("['assign', ['decl', 'a', []], ['add', ['int_lit', 1, 'Int'], ['int_lit', 1, 'Int']]]\n")])])]),s("p",[a._v("というASTが構築され、")]),a._v(" "),s("h3",{attrs:{id:"意味解析器による評価の流れ"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#意味解析器による評価の流れ"}},[a._v("#")]),a._v(" 意味解析器による評価の流れ")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("['decl', 'a', []] -> ['id', 'a', []]\n['add', ['int_lit', 1, 'Int'], ['int_lit', 1, 'Int']] -> ['int_lit', 2, 'Int']\n['assign', ['id', 'a', []], ['int_lit', 2, 'Int']]\n['id', 'a', 'Int'] // a => 2\n")])])]),s("p",[a._v("という流れで評価されます。余談ですが宣言時の "),s("code",[a._v("a")]),a._v(" の型は "),s("code",[a._v("[]")]),a._v(" 、つまり空なのですが代入時に左辺の型から推論しています。つまり型推論を備えているということです。このような単純なパターンだからかもしれませんが実装は全く難しくないので、すぐに実現できています。(ラムダ式の型推論とかやると難しそう)")]),a._v(" "),s("p",[a._v("眠いので寝ます。続きは起きたら書きます。では、")])])}),[],!1,null,null,null);t.default=r.exports}}]);