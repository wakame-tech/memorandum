(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{421:function(t,a,e){"use strict";e.r(a);var s=e(1),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"過ぎるだけの時間じゃ悔しい"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#過ぎるだけの時間じゃ悔しい"}},[t._v("#")]),t._v(" 過ぎるだけの時間じゃ悔しい")]),t._v(" "),e("p",[t._v("「過ぎるだけの時間じゃ悔しい」はアニメ「さくら荘のペットな彼女」ED、「DAYS of DASH/鈴木このみ」の歌詞の冒頭部分が元ネタです。"),e("a",{attrs:{href:"http://www.kasi-time.com/item-64534.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("歌詞"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("高校時代の自分はこの作品に影響を受け、今でも「過ぎるだけの時間じゃ悔しい」は座右の銘的な感じになっています。"),e("br"),t._v("\n神だから、さくら荘見て(布教)")]),t._v(" "),e("blockquote",{staticClass:"twitter-tweet",attrs:{"data-lang":"ja"}},[e("p",{attrs:{lang:"ja",dir:"ltr"}},[t._v("240時間何も予定がないって史上初めてかも"),e("br"),t._v("バイトないって最the高")]),t._v("— わかめ (@wakame_tech) "),e("a",{attrs:{href:"https://twitter.com/wakame_tech/status/1035150010323595264?ref_src=twsrc%5Etfw"}},[t._v("2018年8月30日")])]),t._v(" "),e("script",{attrs:{async:"",src:"https://platform.twitter.com/widgets.js",charset:"utf-8"}}),t._v(" "),e("p",[e("font",{attrs:{size:"1"}},[t._v("※ちなみに「最the高」は「ベィスドロップ・フリークス/作詞作曲:かめりあ 歌:ななひら」が元ネタだと思う。この曲もかなり好きなのでぜひ聞いて。 ")])],1),t._v(" "),e("p",[t._v("10連休に突入しています。過ぎるだけの時間じゃ悔しいので有意義な時間を過ごすように心がけたい。")]),t._v(" "),e("h1",{attrs:{id:"新たに実装した言語機能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#新たに実装した言語機能"}},[t._v("#")]),t._v(" 新たに実装した言語機能")]),t._v(" "),e("h2",{attrs:{id:"_8-13"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-13"}},[t._v("#")]),t._v(" 8/13")]),t._v(" "),e("h3",{attrs:{id:"返り値の型推論"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#返り値の型推論"}},[t._v("#")]),t._v(" 返り値の型推論")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("commit 'implement function/lambda return type estimation'\ncommit 'add call-function's return type estimation'\n")])])]),e("p",[t._v("今までは適当にやっていた返り値の推論をしっかりするようにしました。"),e("br"),t._v("\n例えば、以下のようなコードがある時、")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("fn f(double: (Int) -> Int, a: Int) -> Int {\n    double(3) + a * _2\n}\n\nf({ it * 2 }, 1)\n")])])]),e("p",[t._v("以前は定義された時点では関数本体中の式や変数には型情報がありませんでしたが、定義時に型情報を取得するようにしました。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("(double(3) + a * _2): ???型\ndouble(3): Int型\na: Int型\n_2 => a: Int型\na * _2:Int型 * Int型 = Int型\n(double(3) + a * _2): ???型 => Int型\n")])])]),e("p",[t._v("まだテスト不足なのでバグめちゃくちゃあると思う。")]),t._v(" "),e("h2",{attrs:{id:"_8-14"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-14"}},[t._v("#")]),t._v(" 8/14")]),t._v(" "),e("h3",{attrs:{id:"型メソッド"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#型メソッド"}},[t._v("#")]),t._v(" 型メソッド")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("commit 'support type method call'\ncommit 'support getting reciever variable/literal by \"this\"'\n")])])]),e("p",[e("code",[t._v("Kotlin")]),t._v(" でいう "),e("code",[t._v("Extension Functions")]),t._v(" です。\n特定の型に対するメソッドを生やすことが出来ます。\n"),e("code",[t._v("this")]),t._v(" でレシーバーオブジェクト(ドットの前のオブジェクト)を取得できます。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 型メソッド\nfn Int.sq() -> Int {\n    this ^ 2\n}\n\n4.sq() // 16\n(1 + 5).sq() // 36\n")])])]),e("p",[t._v("関数呼び出し時に型の制限を確認するだけで実装できます。")]),t._v(" "),e("h2",{attrs:{id:"_8-15"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-15"}},[t._v("#")]),t._v(" 8/15")]),t._v(" "),e("p",[t._v("ココらへんは遊びまくっていたので小さなバグ修正と些細なリファクタリングが中心でした。")]),t._v(" "),e("h2",{attrs:{id:"_8-22"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-22"}},[t._v("#")]),t._v(" 8/22")]),t._v(" "),e("h3",{attrs:{id:"repl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#repl"}},[t._v("#")]),t._v(" REPL")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("commit 'add REPL'\n")])])]),e("p",[t._v("最近の言語にはだいたいある "),e("code",[t._v("REPL")]),t._v(" を実装しました。"),e("code",[t._v("REPL")]),t._v(" とは "),e("code",[t._v("Read-eval-print loop")]),t._v(" の略で字のごとく読んで評価して表示して繰り返す。対話型評価環境を指します。\n"),e("font",{attrs:{size:"2"}},[t._v("("),e("a",{attrs:{href:"http://d.hatena.ne.jp/keyword/REPL",target:"_blank",rel:"noopener noreferrer"}},[t._v("はてなキーワード"),e("OutboundLink")],1),t._v(" より)")])],1),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("> 1 + 2\nevaled: [3]\n> [1, 4, 9] == [1 ^ 2, 2 ^ 2, 3 ^ 2]\nevaled: [true]\n")])])]),e("p",[t._v("簡単なテストをするのに便利です。")]),t._v(" "),e("h3",{attrs:{id:"オートマッピング"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#オートマッピング"}},[t._v("#")]),t._v(" オートマッピング")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("commit 'support auto-mapping of operators'\n")])])]),e("p",[t._v("配列と非配列との演算時に自動で "),e("code",[t._v("Array.map")]),t._v(" 相当のことをしてくれるのが "),e("code",[t._v("オートマッピング")]),t._v(" です。何かの自作言語から影響を受けています。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// オートマッピング\nassert([1, 2] + 1 == [2, 3])\nassert([1, 2] + [3, 4] == [4, 6])\nassert(([1, 2, 3] == 2) == [false, true, false])\nassert(([1, 2, 3, 4] % 2 == 0).count() == 2)\n")])])]),e("p",[t._v("ピアノの練習するので今日はここまで。\nパステルのプリン食べたい。")])])}),[],!1,null,null,null);a.default=r.exports}}]);