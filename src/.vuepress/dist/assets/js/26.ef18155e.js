(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{416:function(a,t,s){"use strict";s.r(t);var e=s(1),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"連勤6日目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#連勤6日目"}},[a._v("#")]),a._v(" 連勤6日目")]),a._v(" "),s("p",[a._v("連勤ももう慣れてきて長時間バイトもそこまで苦じゃなくなった、慣れって怖い。今日は4時間シフトなので帰ったら "),s("code",[a._v("Arcturus")]),a._v(" の実装を進めます。最近コミット出来てなかったから。")]),a._v(" "),s("p",[a._v("そういえば、言語の作り方に興味を持ったのに伴ってAmazonでこちらの本を購入しました。"),s("br"),a._v(" "),s("a",{attrs:{href:"https://www.amazon.co.jp/gp/product/B01N7JZXMD/ref=oh_aui_d_detailpage_o02_?ie=UTF8&psc=1",target:"_blank",rel:"noopener noreferrer"}},[a._v("まつもとゆきひろ 言語のしくみ Kindle版"),s("OutboundLink")],1),s("br"),a._v("\nこの本はプログラミング言語 "),s("code",[a._v("Ruby")]),a._v(" の作者であるまつもとゆきひろ氏が１つの新しい言語を作る過程をRubyの裏話やソースコードを交えながら丁寧に解説されています。淡々と実装していくわけでなく試行錯誤しながら使用者を考える、つまり言語のデザインの仕方を学べるのでとてもいい本でした。それでは続きを。")]),a._v(" "),s("h1",{attrs:{id:"_7-26-8日目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-26-8日目"}},[a._v("#")]),a._v(" 7/26(8日目)")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("commit 612fa14d2a8edccb52c09960303098059bb6d799 '右辺値に変数を使うことが可能に'\ncommit 66f6ae54ab20bb684b2a23504464c80b369fdfab 'インクリメント、デクリメントに対応'\n")])])]),s("p",[a._v("変数への代入の実装に手を加えて変数の代入とインクリメント、デクリメントが可能になりました。")]),a._v(" "),s("h3",{attrs:{id:"inc-ac"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inc-ac"}},[a._v("#")]),a._v(" inc.ac")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("a: Int = 3\nb: = a++\n")])])]),s("p",[a._v("このコードを実行すると "),s("code",[a._v("a = 4, b = 4")]),a._v(" と評価されます。注意したいのが "),s("code",[a._v("Arcturus")]),a._v(" には "),s("code",[a._v("C")]),a._v(" と違って "),s("code",[a._v("前置インクリメント")]),a._v("、"),s("code",[a._v("後置インクリメント")]),a._v(" の概念がなく、二項演算子より優先順位の高い単項演算子というだけなので "),s("code",[a._v("C")]),a._v(" とは違う結果となっています。")]),a._v(" "),s("h3",{attrs:{id:"inc-c"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inc-c"}},[a._v("#")]),a._v(" inc.c")]),a._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"%d %d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// a = 4, b = 3")]),a._v("\n")])])]),s("p",[a._v("さらに、")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("commit e68982bf3276daca2a5d0b6cd34101a654ac5d4b '関数定義と呼び出し動くように'\ncommit e8def05067cb594cdc5e90e1b560e00416cd1a9b '自動変数it, _nに対応'\n")])])]),s("p",[a._v("関数定義と呼び出しの実装をしました。関数が定義されると "),s("code",[a._v("関数名")]),a._v(" のシンボルがキーのハッシュが変数テーブルに作成されてそこに引数の情報が格納されます(値はまだない)。")]),a._v(" "),s("p",[a._v("関数が呼び出されるとそのハッシュの変数に具体的な値がセットされて、関数本体が評価されます。そして最後に評価された値を関数の評価値としています。")]),a._v(" "),s("p",[a._v("また自動変数 "),s("code",[a._v("it")]),a._v(" と "),s("code",[a._v("_n")]),a._v(" にも対応しています。宣言せずとも自動で割り当てられる変数なので自動変数です。 "),s("code",[a._v("it")]),a._v(" は引数が１つの関数のみで使用できる引数を示す自動変数です。 "),s("code",[a._v("_n")]),a._v(" はn番目の変数を示す自動変数です。またそれに伴って "),s("code",[a._v("it = 3")]),a._v(" のような行為を防ぐため "),s("code",[a._v("Readonly")]),a._v(" の概念も地味に加わっていたりします。")]),a._v(" "),s("h3",{attrs:{id:"autovar-ac"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#autovar-ac"}},[a._v("#")]),a._v(" autovar.ac")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("fn f1(i1: Int) -> Int {\n     i1 + it + _1\n }\n\nf1(1 + 1) // 6\n")])])]),s("p",[a._v("のような結果となります。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("commit 2e1768a04f7f7bf1482f1845bb6d9684b6bcbfa1 'ラムダ式の代入と呼び出しに対応'\ncommit 55e5a3e5f79301ffbe8e7733a2b059d2178aecba 'ラムダ式引数に対応'\n")])])]),s("p",[a._v("なんとこの日はラムダ式も実装していました。とはいえ新しい実装は少ないです。なぜかというと、")]),a._v(" "),s("h3",{attrs:{id:"arcturus-rb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arcturus-rb"}},[a._v("#")]),a._v(" arcturus.rb")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("fn_name = SecureRandom.urlsafe_base64(8)\nfn_type = _define_function(fn_name, node[1], node[2], [], true)\nreturn ['lambda', fn_name, fn_type]\n")])])]),s("p",[a._v("のように内部ではラムダ式は名前がランダムな文字列の関数です。なので引数がラムダ式であってもそれを評価すれば良いだけの話です。")]),a._v(" "),s("h3",{attrs:{id:"lambda-arg-ac"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lambda-arg-ac"}},[a._v("#")]),a._v(" lambda_arg.ac")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("fn f(a: (Int) -> Int) -> Int {\n    a(1)\n}\n\nf({ s: Int -> s + s }) // 2\n")])])]),s("p",[a._v("上のようなコードが動くようになりました。いいね。それでは。")])])}),[],!1,null,null,null);t.default=n.exports}}]);