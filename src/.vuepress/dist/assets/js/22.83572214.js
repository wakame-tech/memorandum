(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{430:function(t,s,e){"use strict";e.r(s);var a=e(1),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"夏休み突入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#夏休み突入"}},[t._v("#")]),t._v(" 夏休み突入")]),t._v(" "),e("p",[t._v("夏休みです。いかがお過ごしでしょうか、僕はバイト７連勤の真っ只中です💢。外も厨房も地獄のように暑いから家から出たくない。\nとはいえ、(何に対してとはいえなのかわからないけど)期末テストが終わり、突然の確率統計学のレポートもなんとか終わらせて実質今日からが本当の夏休みです。")]),t._v(" "),e("p",[t._v("去年は夏休みに突入するやいなや友達とダーツ・ビリヤード・カラオケ・ボウリングなどと遊びまくっていたせいで、ほぼ何もせずにおわりました。\n唯一やったのは専門学校に進んだ友達がJavaを学び始めたというのでCUIでなにか習作として一緒につくろうといってRPGになれなかった何かを作ったりしたぐらいです。")]),t._v(" "),e("p",[t._v("なので、今年もなにかやろうと、テスト期間中に思いたったのが自作インタプリタ言語処理系です。\n**「夏アプリ」**とでも称して毎年続けていきたいですね。")]),t._v(" "),e("h2",{attrs:{id:"動機"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#動機"}},[t._v("#")]),t._v(" 動機")]),t._v(" "),e("p",[t._v("特に理由はないと思います。\n強いて言えば大学でC言語書かされすぎてフラストレーションが溜まっていたのかもしれません。そこで最高に書きやすい言語作って "),e("code",[t._v("C")]),t._v(" にでも変換できれば強いなとでも思ったのかもしれません。")]),t._v(" "),e("h2",{attrs:{id:"目標"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目標"}},[t._v("#")]),t._v(" 目標")]),t._v(" "),e("p",[t._v("前述の通り、ひとつは自分にとって最高に書きやすいプログラミング言語をつくるってのと、もうひとつは "),e("code",[t._v("C言語")]),t._v(" へのトランスパイラを作りたいというのが２大目標だと思います。")]),t._v(" "),e("h2",{attrs:{id:"今に至る流れ"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#今に至る流れ"}},[t._v("#")]),t._v(" 今に至る流れ")]),t._v(" "),e("p",[t._v("まず、プログラミング言語なのでどのような文法にするかなどの構文を策定しなければいけません。そこでとりあえず現時点の構想を "),e("code",[t._v("BNF(バッカス・ナウア記法)")]),t._v("で表現しました。")]),t._v(" "),e("h3",{attrs:{id:"arcturus-の-bnf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arcturus-の-bnf"}},[t._v("#")]),t._v(" "),e("code",[t._v("Arcturus")]),t._v(" の "),e("code",[t._v("BNF")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<stmts> ::=  <stmt> | <stmt> <stmts> | <stmt> ',' <stmts>\n\n<stmt> ::= <expr> | <def-fn> | <for_stmt> | <if_stmt> | <gate_stmt> | '/*' void '*/'\n\n<def-fn> ::= 'fn' ID <args> '->' <type> '{' <stmts> '}'\n\n<params> ::= '(' <expr_sq> ')' | '(' ')'\n<expr_sq> ::= <expr> ',' <expr_sq> | <expr>\n\n<args> ::= '(' <arg-sq> ')' | '(' ')'\n<arg-sq> ::= void | <arg> ',' <arg-sq> | <arg>\n<arg> ::= ID ':' <type>\n\n<types> '(' <type-sq> ')' | '(' ')'\n<type-sq> ::= void | <type> | <type-sq> ',' <type>\n<type> ::= <types> '->' <type> | TYPE\n\n<for_stmt> ::= 'for' <params> '{' ID '->' <stmts> '}'\n\n<if_stmt> ::= 'if' '(' <expr> ')' '{' <stmts> '}' <else_opt>\n\n<else_opt> ::= void | 'else' '{' <stmts> '}'\n\n<gate_stmt> ::= <case_stmts> '?' <expr>\n<case_stmts> ::= <case_stmt> | <case_stmts> '?' <case_stmt>\n<case_stmt> ::= <expr> '->' <expr>\n\n<expr> ::= \n    ID <params>\n    | <if_stmt>\n    | ID ':' <type-sq>\n    | ID '=' <expr>\n    | ID '⇔' ID\n    | <expr> <bi-op> <expr>\n    | ID <uni-op>\n    | '{' <params> '->' <stmts> '}'\n    | ID\n    | '(' <expr> ')'\n    | <literal>\n<literal> ::= INT_LITERAL | STRING_LITERAL | BOOL_LITERAL\n<bi-op> ::= '+' | '-' | '*' | '/' | '%' | '^' | '..' | '==' | '<=' | '>=' | '!=' | '|>'\n<uni-op> ::= '++' | '--'\nID ::= [a-z][\\w_]*\nTYPE ::= [A-Z][\\w_]*\nINT_LITERAL ::= \\d+\nSTRING_LITERAL ::= '\"' \\w* '\"'\nBOOL_LITERAL ::= true | false\n")])])]),e("p",[t._v("構文に関しては奇を衒わず無難な仕上がりになっていると思います。\nこのあと特徴や影響を受けた言語などについて話そうと思ったのですが、バイトに行く時間が来てしまったので続きはまた明日にしようと思います。\n(覚えていれば)")]),t._v(" "),e("p",[t._v("ではまた。")])])}),[],!1,null,null,null);s.default=n.exports}}]);